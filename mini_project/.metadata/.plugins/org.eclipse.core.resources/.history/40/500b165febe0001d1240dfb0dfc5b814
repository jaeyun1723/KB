package com.air.dao.impl;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import com.air.dao.AirLineDAO;
import com.air.dto.AirLine;
import com.air.exception.DuplicateIDException;

import config.ServerInfo;

public class AirLineDAOImpl implements AirLineDAO {

	private static AirLineDAOImpl dao = new AirLineDAOImpl();

	private AirLineDAOImpl() {
	}

	public static AirLineDAOImpl getInstance() {
		return dao;
	}

	@Override
	public Connection getConnect() throws SQLException {
		Connection conn = DriverManager.getConnection(ServerInfo.URL, ServerInfo.USER, ServerInfo.PASS);
		System.out.println("DB Server Connection......");
		return conn;
	}

	@Override
	public void closeAll(PreparedStatement ps, Connection conn) throws SQLException {
		if (ps != null)
			ps.close();
		if (conn != null)
			conn.close();
	}

	@Override
	public void closeAll(ResultSet rs, PreparedStatement ps, Connection conn) throws SQLException {
		if (rs != null)
			rs.close();
		closeAll(ps, conn);
	}

	private boolean isExist(String airId, Connection conn) throws SQLException {
		PreparedStatement ps = null;
		ResultSet rs = null;

		String query = "SELECT air_id FROM customer WHERE air_id=?";
		ps = conn.prepareStatement(query);
		ps.setString(1, airId);
		rs = ps.executeQuery();
		return rs.next();
	}
	
	@Override
	public void insertAirLine(AirLine airline) throws SQLException {
		Connection conn = null;
		PreparedStatement ps = null;

		try {
			conn = getConnect();
			if (!isExist(airline.getAirId(), conn)) {

				String query = "INSERT INTO airline VALUES(?, ?, ?, ?, ?, ?, ?)";
				ps = conn.prepareStatement(query);
				ps.setString(1, airline.getAirId());
				ps.setString(2, airline.getDptTime());
				ps.setString(3, airline.getArvTime());
				ps.setString(4, airline.getDepart());
				ps.setString(5, airline.getArrival());
				ps.setInt(6, airline.getSeats());
				System.out.println(ps.executeUpdate() + " ROW INSERT OK~!!!");
			} else {
				throw new DuplicateIDException("이미 존재하는 고객입니다.");
			}
		} finally {
			closeAll(ps, conn);
		}
	}

	@Override
	public void updateAirLine(AirLine airline) throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public void deleteAirLine(String airId) throws SQLException {
		// TODO Auto-generated method stub

	}

	@Override
	public ArrayList<AirLine> searchAirLine(String depart, String arrival, double grade) throws SQLException {
		ArrayList<AirLine> airlineList = new ArrayList<>();
		Connection conn = null;
		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			conn = getConnect();
			String query = "SELECT air_id, dpt_time, arv_time, depart, arrival, seats, tot_price "
					+ "FROM airline WHERE depart=? AND arrival=?";
			ps = conn.prepareStatement(query);

			ps.setString(1, depart);
			ps.setString(2, arrival);
			rs = ps.executeQuery();

			while (rs.next()) {
				airlineList.add(new AirLine(rs.getString("air_id"), rs.getString("dpt_time"), rs.getString("arv_time"),
						depart, arrival, rs.getInt("seats"),
						(rs.getInt("tot_price") / rs.getInt("seats") * (int) grade)));
			}
		} finally {
			closeAll(rs, ps, conn);
		}

		return airlineList;
	}

	@Override
	public ArrayList<AirLine> searchAirLine(String dptTime, double grade) throws SQLException, DuplicateIDException {
		ArrayList<AirLine> airlineList = new ArrayList<>();
		Connection conn = null;
		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			conn = getConnect();
			String query = "SELECT air_id, dpt_time, arv_time, depart, arrival, seats, tot_price "
					+ "FROM airline WHERE dpt_time>=TO_DATE(?,'YYYY-MM-DD HH24:MI:SS')";
			ps = conn.prepareStatement(query);
			ps.setString(1, dptTime);
			rs = ps.executeQuery();

			while (rs.next()) {
				airlineList.add(new AirLine(rs.getString("air_id"), dptTime, rs.getString("arv_time"),
						rs.getString("depart"), rs.getString("arrival"), rs.getInt("seats"),
						rs.getInt("tot_price") / rs.getInt("seats") * (int) grade));
			}
		} finally {
			closeAll(rs, ps, conn);
		}

		return airlineList;
	}

	@Override
	public ArrayList<AirLine> searchAirLine(double grade, int totPrice) throws SQLException, DuplicateIDException {
		ArrayList<AirLine> airlineList = new ArrayList<>();
		Connection conn = null;
		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			conn = getConnect();

			String query = "SELECT air_id, dpt_time, arv_time, depart, arrival, seats, tot_price "
					+ "FROM airline WHERE tot_price <= (?*seats) ";

			ps = conn.prepareStatement(query);
			ps.setInt(1, totPrice);
			rs = ps.executeQuery();

			while (rs.next()) {
				airlineList.add(new AirLine(rs.getString("air_id"), rs.getString("dpt_time"), rs.getString("arv_time"),
						rs.getString("depart"), rs.getString("arrival"), rs.getInt("seats"),
						rs.getInt("tot_price") / rs.getInt("seats") * (int) grade));
			}
		} finally {
			closeAll(rs, ps, conn);
		}

		return airlineList;
	}

}
