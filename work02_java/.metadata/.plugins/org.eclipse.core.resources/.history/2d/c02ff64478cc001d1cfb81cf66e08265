package com.self.service;

import com.self.vo.Employee;
import com.self.vo.Engineer;
import com.self.vo.Manager;

public class EmployeeService {
	Employee[] es;
	static int eidx;

	private static EmployeeService service = new EmployeeService(eidx);

	private EmployeeService(int size) {
		es = new Employee[size];
	}

	public static EmployeeService getInstance() {
		return service;
	}

	public void addEmployee(Employee e) {
		es[eidx++] = e;
	}

	public void deleteEmployee(String name) {
		for (int i = 0; i < eidx; i++) {
			if (es[i].getName().equals(name)) {
				for (int j = i; j < eidx; j++)
					es[j] = es[j + 1];
				es[eidx--] = null;
			}
		}
	}

	public void updateManager(double salary, String dept, int deptno, String name) {
		for (Employee e : es) {
			if (e.getName().equals(name)) {
				e.setSalary(salary);
				((Manager) e).setDept(dept);
				((Manager) e).setDeptno(deptno);
			}
		}
	}

	public void updateEngineer(Engineer eg) {
		for (Employee e : es) {
			if (e.getName().equals(eg.getName())) {
				((Engineer) e).setBirthDate(eg.getBirthDate());
				((Engineer) e).setBonus(eg.getBonus());
				((Engineer) e).setSalary(eg.getSalary());
				((Engineer) e).setTech(eg.getTech());
			}
		}
	}

	// Method Overloading
	/*
	 * 하는일은 똑같은데...처리하는 데이타를 달리할때 쓰는 기법 메소드의 통일감을 강조하면서도 서로다른 데이타를 처리할수 있게끔 해준다.
	 */
	public Manager findManager(String name) {
		Manager m = null;
		for (Manager manager : ms) {
			if (manager == null)
				continue;
			if (manager.getName().equals(name))
				m = manager;
		}
		return m;
	}

	public Manager[] findManager(int deptno) {
		Manager[] temp = new Manager[ms.length];
		int count = 0;
		for (Manager manager : ms) {
			if (manager == null)
				continue;
			if (manager.getDeptno() == deptno) {
				temp[count++] = manager;
			}
		}
		return temp;
	}

	public Engineer findEngineer(String name) {
		Engineer eg = null;

		return eg;
	}

	// 추가
	public void printManagers() {
		for (Manager m : ms) {
			if (m != null)
				System.out.println(m.getDetails());
		}
	}

	public void printEngineers() {
		for (Engineer e : egs) {
			if (e != null)
				System.out.println(e.getDetails());
		}
	}
}
